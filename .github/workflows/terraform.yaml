name: Terraform Workflow

on:
  workflow_dispatch: # Manually trigger this workflow
    inputs:
      action:
        description: 'Terraform action for DEVELOPMENT environment (plan, apply, destroy). Default is plan.'
        required: false
        type: choice
        options:
          - plan
          - apply
          - 'destroy plan'
          - destroy
        default: 'plan'
  push:
    branches:
      - 'feature/**' # Trigger on push to branches like feature/new-thing
      - 'master'       # Trigger plan (and then manual apply) on push to master

jobs:
  validate_on_feature_push:
    name: Validate on Feature Branch Push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/feature/') # Only run for push to feature/*
    env: # Define common environment variables for Azure auth for this job, if init needs them
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        run: terraform init # ARM_ env vars might be needed by Azure provider during init

      - name: Terraform Validate
        run: terraform validate
        
  terraform_manual_actions_dev: # Renamed for clarity
    name: Manual Terraform Actions (Development Env)
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' # Only run this job for manual dispatch
    env: # Define common environment variables for Azure auth for this job
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        run: terraform init # ARM_ env vars will be used by Azure provider

      - name: Terraform Validate
        run: terraform validate # Usually doesn't need auth, but init might have configured provider

      - name: Terraform Plan
        if: github.event.inputs.action == 'plan' || github.event.inputs.action == 'apply'
        run: terraform plan -out=tfplan

      - name: Show Terraform Plan
        if: github.event.inputs.action == 'plan' || github.event.inputs.action == 'apply'
        run: terraform show -no-color tfplan

      - name: Terraform Apply (Manual)
        if: github.event.inputs.action == 'apply'
        run: terraform apply -auto-approve tfplan

      - name: Terraform Destroy Plan
        if: github.event.inputs.action == 'destroy plan'
        run: terraform plan -destroy -out=tfdestroyplan

      - name: Terraform Destroy Apply
        if: github.event.inputs.action == 'destroy'
        run: terraform apply -auto-approve tfdestroyplan

  plan_for_master:
    name: Plan for Master Branch
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.5
      - name: Terraform Init
        run: terraform init
      - name: Terraform Validate
        run: terraform validate
      - name: Terraform Plan
        run: terraform plan -out=tfplan-master
      - name: Upload Terraform Plan for Master
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-master-artifact
          path: tfplan-master
          retention-days: 7

  destroy_plan_for_master:
    name: Show Destroy Plan for Master Branch
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.5
      - name: Terraform Init
        run: terraform init
      - name: Terraform Destroy Plan
        run: terraform plan -destroy -out=tfdestroyplan-master
      - name: Show Destroy Plan
        run: terraform show -no-color tfdestroyplan-master

  apply_for_master:
    name: Apply for Master Branch (Requires Approval)
    runs-on: ubuntu-latest
    needs: [plan_for_master] # Ensures this job runs after plan_for_master and destroy_plan_for_master
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' # Ensures it only runs for master pushes
    environment:
      name: production
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.5
      - name: Download Terraform Plan for Master
        uses: actions/download-artifact@v4
        with:
          name: tfplan-master-artifact
      - name: Terraform Init
        run: terraform init
      - name: Show Terraform Plan
        run: terraform show -no-color tfplan-master
      - name: Terraform Apply (using plan)
        run: terraform apply -auto-approve tfplan-master

  destroy_apply_for_master:
    name: Destroy Apply for Master Branch (Requires Approval)
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
    environment:
      name: production
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.5
      - name: Terraform Init
        run: terraform init
      - name: Download Destroy Plan for Master
        if: always()
        run: |
          if [ -f tfdestroyplan-master ]; then echo "Destroy plan already present."; else echo "No destroy plan found, please run destroy plan first." && exit 1; fi
      - name: Show Destroy Plan
        run: terraform show -no-color tfdestroyplan-master
      - name: Terraform Destroy Apply
        run: terraform apply -auto-approve tfdestroyplan-master
